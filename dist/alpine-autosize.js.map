{"version":3,"file":"alpine-autosize.js","sources":["../src/index.js","../builds/cdn.js"],"sourcesContent":["function Autosize(Alpine) {\n    Alpine.directive('autosize', (el, { modifiers }, { cleanup }) => {\n        const attributes = Array.from(el.attributes);\n\n        let hasWireModel = false;\n\n        for (let { nodeName } of attributes) {\n            if (nodeName === 'wire:model' || nodeName.startsWith('wire:model.')) {\n                hasWireModel = true;\n                break;\n            }\n        }\n\n        if (!el.hasAttribute('wire:ignore') && hasWireModel) {\n            el.setAttribute('wire:ignore', '');\n        }\n\n        const previousResizeValue = el.style.resize;\n        el.style.resize = 'none';\n\n        const previousMinHeight = el.style.minHeight;\n        el.style.minHeight = `${el.getBoundingClientRect().height}px`;\n\n        const paddingModifier = modifiers.filter(modifier => modifier.match(/px$/i))[0] || false;\n        let padding = 0;\n        if (paddingModifier !== false) {\n            padding = parseInt(paddingModifier);\n        }\n\n        const handler = (event) => {\n            const element = event.target;\n            if (!element.scrollHeight) {\n                return;\n            }\n            element.style.height = '4px';\n            element.style.height = `${element.scrollHeight + padding}px`;\n        };\n\n        handler({ target: el });\n\n        el.addEventListener('input', handler);\n\n        cleanup(() => {\n            el.style.resize = previousResizeValue;\n            el.style.minHeight = previousMinHeight;\n            el.removeEventListener('input', handler);\n        });\n    });\n}\n\nexport default Autosize;\n","import autosize from '../src/index.js';\n\ndocument.addEventListener('alpine:init', () => {\n    autosize(window.Alpine);\n});\n"],"names":["Autosize","Alpine","directive","el","modifiers","cleanup","attributes","Array","from","hasWireModel","nodeName","startsWith","hasAttribute","setAttribute","previousResizeValue","style","resize","previousMinHeight","minHeight","getBoundingClientRect","height","paddingModifier","filter","modifier","match","padding","parseInt","handler","event","element","target","scrollHeight","addEventListener","removeEventListener","document","autosize","window"],"mappings":";;;;;IAAA,SAASA,QAAT,CAAkBC,MAAlB,EAA0B;IACtBA,EAAAA,MAAM,CAACC,SAAP,CAAiB,UAAjB,EAA6B,CAACC,EAAD,EAAK;IAAEC,IAAAA;IAAF,GAAL,EAAoB;IAAEC,IAAAA;IAAF,GAApB,KAAoC;IAC7D,UAAMC,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWL,EAAE,CAACG,UAAd,CAAnB;IAEA,QAAIG,YAAY,GAAG,KAAnB;;IAEA,SAAK,IAAI;IAAEC,MAAAA;IAAF,KAAT,IAAyBJ,UAAzB,EAAqC;IACjC,UAAII,QAAQ,KAAK,YAAb,IAA6BA,QAAQ,CAACC,UAAT,CAAoB,aAApB,CAAjC,EAAqE;IACjEF,QAAAA,YAAY,GAAG,IAAf;IACA;IACH;IACJ;;IAED,QAAI,CAACN,EAAE,CAACS,YAAH,CAAgB,aAAhB,CAAD,IAAmCH,YAAvC,EAAqD;IACjDN,MAAAA,EAAE,CAACU,YAAH,CAAgB,aAAhB,EAA+B,EAA/B;IACH;;IAED,UAAMC,mBAAmB,GAAGX,EAAE,CAACY,KAAH,CAASC,MAArC;IACAb,IAAAA,EAAE,CAACY,KAAH,CAASC,MAAT,GAAkB,MAAlB;IAEA,UAAMC,iBAAiB,GAAGd,EAAE,CAACY,KAAH,CAASG,SAAnC;IACAf,IAAAA,EAAE,CAACY,KAAH,CAASG,SAAT,GAAsB,GAAEf,EAAE,CAACgB,qBAAH,GAA2BC,MAAO,IAA1D;IAEA,UAAMC,eAAe,GAAGjB,SAAS,CAACkB,MAAV,CAAiBC,QAAQ,IAAIA,QAAQ,CAACC,KAAT,CAAe,MAAf,CAA7B,EAAqD,CAArD,KAA2D,KAAnF;IACA,QAAIC,OAAO,GAAG,CAAd;;IACA,QAAIJ,eAAe,KAAK,KAAxB,EAA+B;IAC3BI,MAAAA,OAAO,GAAGC,QAAQ,CAACL,eAAD,CAAlB;IACH;;IAED,UAAMM,OAAO,GAAIC,KAAD,IAAW;IACvB,YAAMC,OAAO,GAAGD,KAAK,CAACE,MAAtB;;IACA,UAAI,CAACD,OAAO,CAACE,YAAb,EAA2B;IACvB;IACH;;IACDF,MAAAA,OAAO,CAACd,KAAR,CAAcK,MAAd,GAAuB,KAAvB;IACAS,MAAAA,OAAO,CAACd,KAAR,CAAcK,MAAd,GAAwB,GAAES,OAAO,CAACE,YAAR,GAAuBN,OAAQ,IAAzD;IACH,KAPD;;IASAE,IAAAA,OAAO,CAAC;IAAEG,MAAAA,MAAM,EAAE3B;IAAV,KAAD,CAAP;IAEAA,IAAAA,EAAE,CAAC6B,gBAAH,CAAoB,OAApB,EAA6BL,OAA7B;IAEAtB,IAAAA,OAAO,CAAC,MAAM;IACVF,MAAAA,EAAE,CAACY,KAAH,CAASC,MAAT,GAAkBF,mBAAlB;IACAX,MAAAA,EAAE,CAACY,KAAH,CAASG,SAAT,GAAqBD,iBAArB;IACAd,MAAAA,EAAE,CAAC8B,mBAAH,CAAuB,OAAvB,EAAgCN,OAAhC;IACH,KAJM,CAAP;IAKH,GA9CD;IA+CH;;IC9CDO,QAAQ,CAACF,gBAAT,CAA0B,aAA1B,EAAyC,MAAM;IAC3CG,EAAAA,QAAQ,CAACC,MAAM,CAACnC,MAAR,CAAR;IACH,CAFD;;;;;;"}