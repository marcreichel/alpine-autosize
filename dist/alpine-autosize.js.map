{"version":3,"file":"alpine-autosize.js","sources":["../src/index.ts","../builds/cdn.ts"],"sourcesContent":["function Autosize(Alpine: any): void {\n    Alpine.directive(\n        'autosize',\n        (\n            el: HTMLElement,\n            { modifiers }: { modifiers: string[] },\n            { cleanup }: { cleanup: (callback: () => void) => void },\n        ): void => {\n            const attributes: Attr[] = Array.from(el.attributes);\n\n            let hasWireModel: boolean = false;\n\n            for (let { nodeName } of attributes) {\n                if (\n                    nodeName === 'wire:model' ||\n                    nodeName.startsWith('wire:model.')\n                ) {\n                    hasWireModel = true;\n                    break;\n                }\n            }\n\n            if (!el.hasAttribute('wire:ignore') && hasWireModel) {\n                el.setAttribute('wire:ignore', '');\n            }\n\n            const previousResizeValue: string = el.style.resize;\n            el.style.resize = 'none';\n\n            const previousMinHeight: string = el.style.minHeight;\n            el.style.minHeight = `${el.getBoundingClientRect().height}px`;\n\n            const paddingModifier =\n                modifiers.filter((modifier) => modifier.match(/px$/i))[0] ||\n                false;\n            let padding: number = 0;\n            if (paddingModifier !== false) {\n                padding = parseInt(paddingModifier);\n            }\n\n            const handler: (event: Partial<Event>) => void = (\n                event: Partial<Event>,\n            ) => {\n                const element: HTMLElement = <HTMLElement>event.target;\n                if (!element.scrollHeight) {\n                    return;\n                }\n                element.style.height = '4px';\n                element.style.height = `${element.scrollHeight + padding}px`;\n            };\n\n            handler({ target: el });\n\n            el.addEventListener('input', handler);\n\n            cleanup((): void => {\n                el.style.resize = previousResizeValue;\n                el.style.minHeight = previousMinHeight;\n                el.removeEventListener('input', handler);\n            });\n        },\n    );\n}\n\nexport default Autosize;\n","import autosize from '../src/index';\n\ndocument.addEventListener('alpine:init', (): void => {\n    autosize((<any>window).Alpine);\n});\n"],"names":["autosize"],"mappings":";;;;;IAAA,SAAS,QAAQ,CAAC,MAAW;QACzB,MAAM,CAAC,SAAS,CACZ,UAAU,EACV,UACI,EAAe,EACf,EAAsC,EACtC,EAAwD;gBADtD,SAAS,eAAA;gBACT,OAAO,aAAA;YAET,IAAM,UAAU,GAAW,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;YAErD,IAAI,YAAY,GAAY,KAAK,CAAC;YAElC,KAAyB,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU,EAAE;gBAA1B,IAAA,QAAQ,4BAAA;gBACf,IACI,QAAQ,KAAK,YAAY;oBACzB,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,EACpC;oBACE,YAAY,GAAG,IAAI,CAAC;oBACpB,MAAM;iBACT;aACJ;YAED,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,YAAY,EAAE;gBACjD,EAAE,CAAC,YAAY,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;aACtC;YAED,IAAM,mBAAmB,GAAW,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;YACpD,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YAEzB,IAAM,iBAAiB,GAAW,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC;YACrD,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,UAAG,EAAE,CAAC,qBAAqB,EAAE,CAAC,MAAM,OAAI,CAAC;YAE9D,IAAM,eAAe,GACjB,SAAS,CAAC,MAAM,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,GAAA,CAAC,CAAC,CAAC,CAAC;gBACzD,KAAK,CAAC;YACV,IAAI,OAAO,GAAW,CAAC,CAAC;YACxB,IAAI,eAAe,KAAK,KAAK,EAAE;gBAC3B,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC,CAAC;aACvC;YAED,IAAM,OAAO,GAAoC,UAC7C,KAAqB;gBAErB,IAAM,OAAO,GAA6B,KAAK,CAAC,MAAM,CAAC;gBACvD,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;oBACvB,OAAO;iBACV;gBACD,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;gBAC7B,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,UAAG,OAAO,CAAC,YAAY,GAAG,OAAO,OAAI,CAAC;aAChE,CAAC;YAEF,OAAO,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;YAExB,EAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAEtC,OAAO,CAAC;gBACJ,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,mBAAmB,CAAC;gBACtC,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,iBAAiB,CAAC;gBACvC,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aAC5C,CAAC,CAAC;SACN,CACJ,CAAC;IACN;;IC5DA,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE;QACrCA,QAAQ,CAAO,MAAO,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC,CAAC;;;;;;"}