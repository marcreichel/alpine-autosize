{"version":3,"file":"alpine-autosize.min.js","sources":["../builds/cdn.js","../src/index.js"],"sourcesContent":["import autosize from '../src/index.js';\n\ndocument.addEventListener('alpine:init', () => {\n    autosize(window.Alpine);\n});\n","function Autosize(Alpine) {\n    Alpine.directive('autosize', (el, { modifiers }, { cleanup }) => {\n        const attributes = Array.from(el.attributes);\n\n        let hasWireModel = false;\n\n        for (let { nodeName } of attributes) {\n            if (nodeName === 'wire:model' || nodeName.startsWith('wire:model.')) {\n                hasWireModel = true;\n                break;\n            }\n        }\n\n        if (!el.hasAttribute('wire:ignore') && hasWireModel) {\n            el.setAttribute('wire:ignore', '');\n        }\n\n        const previousResizeValue = el.style.resize;\n        el.style.resize = 'none';\n\n        const previousMinHeight = el.style.minHeight;\n        el.style.minHeight = `${el.getBoundingClientRect().height}px`;\n\n        const paddingModifier = modifiers.filter(modifier => modifier.match(/px$/i))[0] || false;\n        let padding = 0;\n        if (paddingModifier !== false) {\n            padding = parseInt(paddingModifier);\n        }\n\n        const handler = (event) => {\n            const element = event.target;\n            if (!element.scrollHeight) {\n                return;\n            }\n            element.style.height = '4px';\n            element.style.height = `${element.scrollHeight + padding}px`;\n        };\n\n        handler({ target: el });\n\n        el.addEventListener('input', handler);\n\n        cleanup(() => {\n            el.style.resize = previousResizeValue;\n            el.style.minHeight = previousMinHeight;\n            el.removeEventListener('input', handler);\n        });\n    });\n}\n\nexport default Autosize;\n"],"names":["document","addEventListener","window","Alpine","directive","el","modifiers","cleanup","attributes","Array","from","hasWireModel","nodeName","startsWith","hasAttribute","setAttribute","previousResizeValue","style","resize","previousMinHeight","minHeight","getBoundingClientRect","height","paddingModifier","filter","modifier","match","padding","parseInt","handler","event","element","target","scrollHeight","removeEventListener"],"mappings":"2FAEAA,SAASC,iBAAiB,eAAe,KAC5BC,OAAOC,OCFTC,UAAU,YAAY,CAACC,GAAMC,UAAAA,IAAeC,QAAAA,YACzCC,EAAaC,MAAMC,KAAKL,EAAGG,gBAE7BG,GAAe,MAEd,IAAIC,SAAEA,KAAcJ,KACJ,eAAbI,GAA6BA,EAASC,WAAW,eAAgB,CACjEF,GAAe,SAKlBN,EAAGS,aAAa,gBAAkBH,GACnCN,EAAGU,aAAa,cAAe,UAG7BC,EAAsBX,EAAGY,MAAMC,OACrCb,EAAGY,MAAMC,OAAS,aAEZC,EAAoBd,EAAGY,MAAMG,UACnCf,EAAGY,MAAMG,UAAa,GAAEf,EAAGgB,wBAAwBC,iBAE7CC,EAAkBjB,EAAUkB,QAAOC,GAAYA,EAASC,MAAM,UAAS,KAAM,MAC/EC,EAAU,GACU,IAApBJ,IACAI,EAAUC,SAASL,UAGjBM,EAAWC,UACPC,EAAUD,EAAME,OACjBD,EAAQE,eAGbF,EAAQd,MAAMK,OAAS,MACvBS,EAAQd,MAAMK,OAAU,GAAES,EAAQE,aAAeN,QAGrDE,EAAQ,CAAEG,OAAQ3B,IAElBA,EAAGJ,iBAAiB,QAAS4B,GAE7BtB,GAAQ,KACJF,EAAGY,MAAMC,OAASF,EAClBX,EAAGY,MAAMG,UAAYD,EACrBd,EAAG6B,oBAAoB,QAASL"}